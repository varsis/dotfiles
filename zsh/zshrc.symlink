# shortcut to this dotfiles path is $ZSH_DOT_DOT
export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=1
export ZSH="/Users/chris/.ohmy"
export ZSH_DOT=$HOME/.dotfiles

ZSH_THEME="agnoster"
source $ZSH/oh-my-zsh.sh

export FZF_DEFAULT_COMMAND='fd --type f'

plugins=(git vi-mode yarn zsh-completion)

# Android 
export ANDROID_HOME=~/Library/Android/sdk
export ANDROID_SDK=$ANDROID_HOME
export PATH=~/Library/Android/sdk/tools:$PATH
export PATH=~/Library/Android/sdk/platform-tools:$PATH
export PATH=$PATH:/Users/chris/Downloads/IBM-MQ-Toolkit-Mac-x64-9.1.1.0/lib64
export PATH="$HOME/.fastlane/bin:$PATH"
export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=1 
export TESTING=test
alias magiclink='xcrun simctl openurl booted'
alias android-magiclink='adb shell am start -a android.intent.action.VIEW -d'

# your project folder that we can `c [tab]` to
export PROJECTS=~/Projects

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH_DOT/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

bindkey -v
bindkey '^R' history-incremental-pattern-search-backward

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/chris/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/chris/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/chris/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/chris/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/chris/Projects/alexa-experience/node_modules/tabtab/.completions/slss.zsh

export NVM_DIR="$HOME/.nvm"
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion
